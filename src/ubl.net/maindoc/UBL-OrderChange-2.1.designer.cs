// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code. Version 3.4.0.32989
//    <NameSpace>Oasis.Ubl.v21</NameSpace><Collection>ObservableCollection</Collection><codeType>CSharp</codeType><EnableDataBinding>True</EnableDataBinding><EnableLazyLoading>False</EnableLazyLoading><TrackingChangesEnable>False</TrackingChangesEnable><GenTrackingClasses>False</GenTrackingClasses><HidePrivateFieldInIDE>False</HidePrivateFieldInIDE><EnableSummaryComment>False</EnableSummaryComment><VirtualProp>False</VirtualProp><IncludeSerializeMethod>True</IncludeSerializeMethod><UseBaseClass>False</UseBaseClass><GenBaseClass>False</GenBaseClass><GenerateCloneMethod>True</GenerateCloneMethod><GenerateDataContracts>True</GenerateDataContracts><CodeBaseTag>Net20</CodeBaseTag><SerializeMethodName>Serialize</SerializeMethodName><DeserializeMethodName>Deserialize</DeserializeMethodName><SaveToFileMethodName>SaveToFile</SaveToFileMethodName><LoadFromFileMethodName>LoadFromFile</LoadFromFileMethodName><GenerateXMLAttributes>False</GenerateXMLAttributes><OrderXMLAttrib>False</OrderXMLAttrib><EnableEncoding>False</EnableEncoding><AutomaticProperties>False</AutomaticProperties><GenerateShouldSerialize>False</GenerateShouldSerialize><DisableDebug>False</DisableDebug><PropNameSpecified>Default</PropNameSpecified><Encoder>UTF8</Encoder><CustomUsings></CustomUsings><ExcludeIncludedTypes>True</ExcludeIncludedTypes><EnableInitializeFields>True</EnableInitializeFields>
//  </auto-generated>
// ------------------------------------------------------------------------------
namespace Oasis.Ubl.v21 {
    using System;
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System.Collections;
    using System.Xml.Schema;
    using System.ComponentModel;
    using System.IO;
    using System.Text;
    using System.Collections.ObjectModel;
    
    
    public partial class OrderChangeType : System.ComponentModel.INotifyPropertyChanged {
        
        private ObservableCollection<UBLExtensionType> uBLExtensionsField;
        
        private UBLVersionIDType uBLVersionIDField;
        
        private CustomizationIDType customizationIDField;
        
        private ProfileIDType profileIDField;
        
        private ProfileExecutionIDType profileExecutionIDField;
        
        private IDType idField;
        
        private SalesOrderIDType salesOrderIDField;
        
        private CopyIndicatorType copyIndicatorField;
        
        private UUIDType uUIDField;
        
        private IssueDateType issueDateField;
        
        private IssueTimeType issueTimeField;
        
        private SequenceNumberIDType sequenceNumberIDField;
        
        private ObservableCollection<NoteType> noteField;
        
        private RequestedInvoiceCurrencyCodeType requestedInvoiceCurrencyCodeField;
        
        private DocumentCurrencyCodeType documentCurrencyCodeField;
        
        private PricingCurrencyCodeType pricingCurrencyCodeField;
        
        private TaxCurrencyCodeType taxCurrencyCodeField;
        
        private CustomerReferenceType customerReferenceField;
        
        private AccountingCostCodeType accountingCostCodeField;
        
        private AccountingCostType accountingCostField;
        
        private LineCountNumericType lineCountNumericField;
        
        private ObservableCollection<PeriodType> validityPeriodField;
        
        private OrderReferenceType orderReferenceField;
        
        private DocumentReferenceType quotationDocumentReferenceField;
        
        private DocumentReferenceType originatorDocumentReferenceField;
        
        private ObservableCollection<DocumentReferenceType> additionalDocumentReferenceField;
        
        private ObservableCollection<ContractType> contractField;
        
        private ObservableCollection<SignatureType> signatureField;
        
        private CustomerPartyType buyerCustomerPartyField;
        
        private SupplierPartyType sellerSupplierPartyField;
        
        private CustomerPartyType originatorCustomerPartyField;
        
        private PartyType freightForwarderPartyField;
        
        private CustomerPartyType accountingCustomerPartyField;
        
        private SupplierPartyType accountingSupplierPartyField;
        
        private ObservableCollection<DeliveryType> deliveryField;
        
        private DeliveryTermsType deliveryTermsField;
        
        private ObservableCollection<PaymentMeansType> paymentMeansField;
        
        private ObservableCollection<PaymentTermsType> paymentTermsField;
        
        private TransactionConditionsType transactionConditionsField;
        
        private ObservableCollection<AllowanceChargeType> allowanceChargeField;
        
        private ExchangeRateType taxExchangeRateField;
        
        private ExchangeRateType pricingExchangeRateField;
        
        private ExchangeRateType paymentExchangeRateField;
        
        private CountryType destinationCountryField;
        
        private ObservableCollection<TaxTotalType> taxTotalField;
        
        private MonetaryTotalType anticipatedMonetaryTotalField;
        
        private ObservableCollection<OrderLineType> orderLineField;
        
        private static System.Xml.Serialization.XmlSerializer serializer;
        
        public OrderChangeType() {
            this.orderLineField = new ObservableCollection<OrderLineType>();
            this.anticipatedMonetaryTotalField = new MonetaryTotalType();
            this.taxTotalField = new ObservableCollection<TaxTotalType>();
            this.destinationCountryField = new CountryType();
            this.paymentExchangeRateField = new ExchangeRateType();
            this.pricingExchangeRateField = new ExchangeRateType();
            this.taxExchangeRateField = new ExchangeRateType();
            this.allowanceChargeField = new ObservableCollection<AllowanceChargeType>();
            this.transactionConditionsField = new TransactionConditionsType();
            this.paymentTermsField = new ObservableCollection<PaymentTermsType>();
            this.paymentMeansField = new ObservableCollection<PaymentMeansType>();
            this.deliveryTermsField = new DeliveryTermsType();
            this.deliveryField = new ObservableCollection<DeliveryType>();
            this.accountingSupplierPartyField = new SupplierPartyType();
            this.accountingCustomerPartyField = new CustomerPartyType();
            this.freightForwarderPartyField = new PartyType();
            this.originatorCustomerPartyField = new CustomerPartyType();
            this.sellerSupplierPartyField = new SupplierPartyType();
            this.buyerCustomerPartyField = new CustomerPartyType();
            this.signatureField = new ObservableCollection<SignatureType>();
            this.contractField = new ObservableCollection<ContractType>();
            this.additionalDocumentReferenceField = new ObservableCollection<DocumentReferenceType>();
            this.originatorDocumentReferenceField = new DocumentReferenceType();
            this.quotationDocumentReferenceField = new DocumentReferenceType();
            this.orderReferenceField = new OrderReferenceType();
            this.validityPeriodField = new ObservableCollection<PeriodType>();
            this.lineCountNumericField = new LineCountNumericType();
            this.accountingCostField = new AccountingCostType();
            this.accountingCostCodeField = new AccountingCostCodeType();
            this.customerReferenceField = new CustomerReferenceType();
            this.taxCurrencyCodeField = new TaxCurrencyCodeType();
            this.pricingCurrencyCodeField = new PricingCurrencyCodeType();
            this.documentCurrencyCodeField = new DocumentCurrencyCodeType();
            this.requestedInvoiceCurrencyCodeField = new RequestedInvoiceCurrencyCodeType();
            this.noteField = new ObservableCollection<NoteType>();
            this.sequenceNumberIDField = new SequenceNumberIDType();
            this.issueTimeField = new IssueTimeType();
            this.issueDateField = new IssueDateType();
            this.uUIDField = new UUIDType();
            this.copyIndicatorField = new CopyIndicatorType();
            this.salesOrderIDField = new SalesOrderIDType();
            this.idField = new IDType();
            this.profileExecutionIDField = new ProfileExecutionIDType();
            this.profileIDField = new ProfileIDType();
            this.customizationIDField = new CustomizationIDType();
            this.uBLVersionIDField = new UBLVersionIDType();
            this.uBLExtensionsField = new ObservableCollection<UBLExtensionType>();
        }
        
        [System.Xml.Serialization.XmlArrayAttribute(Namespace="urn:oasis:names:specification:ubl:schema:xsd:CommonExtensionComponents-2")]
        [System.Xml.Serialization.XmlArrayItemAttribute("UBLExtension", IsNullable=false)]
        public ObservableCollection<UBLExtensionType> UBLExtensions {
            get {
                return this.uBLExtensionsField;
            }
            set {
                if ((this.uBLExtensionsField != null)) {
                    if ((uBLExtensionsField.Equals(value) != true)) {
                        this.uBLExtensionsField = value;
                        this.OnPropertyChanged("UBLExtensions");
                    }
                }
                else {
                    this.uBLExtensionsField = value;
                    this.OnPropertyChanged("UBLExtensions");
                }
            }
        }
        
        public UBLVersionIDType UBLVersionID {
            get {
                return this.uBLVersionIDField;
            }
            set {
                if ((this.uBLVersionIDField != null)) {
                    if ((uBLVersionIDField.Equals(value) != true)) {
                        this.uBLVersionIDField = value;
                        this.OnPropertyChanged("UBLVersionID");
                    }
                }
                else {
                    this.uBLVersionIDField = value;
                    this.OnPropertyChanged("UBLVersionID");
                }
            }
        }
        
        public CustomizationIDType CustomizationID {
            get {
                return this.customizationIDField;
            }
            set {
                if ((this.customizationIDField != null)) {
                    if ((customizationIDField.Equals(value) != true)) {
                        this.customizationIDField = value;
                        this.OnPropertyChanged("CustomizationID");
                    }
                }
                else {
                    this.customizationIDField = value;
                    this.OnPropertyChanged("CustomizationID");
                }
            }
        }
        
        public ProfileIDType ProfileID {
            get {
                return this.profileIDField;
            }
            set {
                if ((this.profileIDField != null)) {
                    if ((profileIDField.Equals(value) != true)) {
                        this.profileIDField = value;
                        this.OnPropertyChanged("ProfileID");
                    }
                }
                else {
                    this.profileIDField = value;
                    this.OnPropertyChanged("ProfileID");
                }
            }
        }
        
        public ProfileExecutionIDType ProfileExecutionID {
            get {
                return this.profileExecutionIDField;
            }
            set {
                if ((this.profileExecutionIDField != null)) {
                    if ((profileExecutionIDField.Equals(value) != true)) {
                        this.profileExecutionIDField = value;
                        this.OnPropertyChanged("ProfileExecutionID");
                    }
                }
                else {
                    this.profileExecutionIDField = value;
                    this.OnPropertyChanged("ProfileExecutionID");
                }
            }
        }
        
        public IDType ID {
            get {
                return this.idField;
            }
            set {
                if ((this.idField != null)) {
                    if ((idField.Equals(value) != true)) {
                        this.idField = value;
                        this.OnPropertyChanged("ID");
                    }
                }
                else {
                    this.idField = value;
                    this.OnPropertyChanged("ID");
                }
            }
        }
        
        public SalesOrderIDType SalesOrderID {
            get {
                return this.salesOrderIDField;
            }
            set {
                if ((this.salesOrderIDField != null)) {
                    if ((salesOrderIDField.Equals(value) != true)) {
                        this.salesOrderIDField = value;
                        this.OnPropertyChanged("SalesOrderID");
                    }
                }
                else {
                    this.salesOrderIDField = value;
                    this.OnPropertyChanged("SalesOrderID");
                }
            }
        }
        
        public CopyIndicatorType CopyIndicator {
            get {
                return this.copyIndicatorField;
            }
            set {
                if ((this.copyIndicatorField != null)) {
                    if ((copyIndicatorField.Equals(value) != true)) {
                        this.copyIndicatorField = value;
                        this.OnPropertyChanged("CopyIndicator");
                    }
                }
                else {
                    this.copyIndicatorField = value;
                    this.OnPropertyChanged("CopyIndicator");
                }
            }
        }
        
        public UUIDType UUID {
            get {
                return this.uUIDField;
            }
            set {
                if ((this.uUIDField != null)) {
                    if ((uUIDField.Equals(value) != true)) {
                        this.uUIDField = value;
                        this.OnPropertyChanged("UUID");
                    }
                }
                else {
                    this.uUIDField = value;
                    this.OnPropertyChanged("UUID");
                }
            }
        }
        
        public IssueDateType IssueDate {
            get {
                return this.issueDateField;
            }
            set {
                if ((this.issueDateField != null)) {
                    if ((issueDateField.Equals(value) != true)) {
                        this.issueDateField = value;
                        this.OnPropertyChanged("IssueDate");
                    }
                }
                else {
                    this.issueDateField = value;
                    this.OnPropertyChanged("IssueDate");
                }
            }
        }
        
        public IssueTimeType IssueTime {
            get {
                return this.issueTimeField;
            }
            set {
                if ((this.issueTimeField != null)) {
                    if ((issueTimeField.Equals(value) != true)) {
                        this.issueTimeField = value;
                        this.OnPropertyChanged("IssueTime");
                    }
                }
                else {
                    this.issueTimeField = value;
                    this.OnPropertyChanged("IssueTime");
                }
            }
        }
        
        public SequenceNumberIDType SequenceNumberID {
            get {
                return this.sequenceNumberIDField;
            }
            set {
                if ((this.sequenceNumberIDField != null)) {
                    if ((sequenceNumberIDField.Equals(value) != true)) {
                        this.sequenceNumberIDField = value;
                        this.OnPropertyChanged("SequenceNumberID");
                    }
                }
                else {
                    this.sequenceNumberIDField = value;
                    this.OnPropertyChanged("SequenceNumberID");
                }
            }
        }
        
        public ObservableCollection<NoteType> Note {
            get {
                return this.noteField;
            }
            set {
                if ((this.noteField != null)) {
                    if ((noteField.Equals(value) != true)) {
                        this.noteField = value;
                        this.OnPropertyChanged("Note");
                    }
                }
                else {
                    this.noteField = value;
                    this.OnPropertyChanged("Note");
                }
            }
        }
        
        public RequestedInvoiceCurrencyCodeType RequestedInvoiceCurrencyCode {
            get {
                return this.requestedInvoiceCurrencyCodeField;
            }
            set {
                if ((this.requestedInvoiceCurrencyCodeField != null)) {
                    if ((requestedInvoiceCurrencyCodeField.Equals(value) != true)) {
                        this.requestedInvoiceCurrencyCodeField = value;
                        this.OnPropertyChanged("RequestedInvoiceCurrencyCode");
                    }
                }
                else {
                    this.requestedInvoiceCurrencyCodeField = value;
                    this.OnPropertyChanged("RequestedInvoiceCurrencyCode");
                }
            }
        }
        
        public DocumentCurrencyCodeType DocumentCurrencyCode {
            get {
                return this.documentCurrencyCodeField;
            }
            set {
                if ((this.documentCurrencyCodeField != null)) {
                    if ((documentCurrencyCodeField.Equals(value) != true)) {
                        this.documentCurrencyCodeField = value;
                        this.OnPropertyChanged("DocumentCurrencyCode");
                    }
                }
                else {
                    this.documentCurrencyCodeField = value;
                    this.OnPropertyChanged("DocumentCurrencyCode");
                }
            }
        }
        
        public PricingCurrencyCodeType PricingCurrencyCode {
            get {
                return this.pricingCurrencyCodeField;
            }
            set {
                if ((this.pricingCurrencyCodeField != null)) {
                    if ((pricingCurrencyCodeField.Equals(value) != true)) {
                        this.pricingCurrencyCodeField = value;
                        this.OnPropertyChanged("PricingCurrencyCode");
                    }
                }
                else {
                    this.pricingCurrencyCodeField = value;
                    this.OnPropertyChanged("PricingCurrencyCode");
                }
            }
        }
        
        public TaxCurrencyCodeType TaxCurrencyCode {
            get {
                return this.taxCurrencyCodeField;
            }
            set {
                if ((this.taxCurrencyCodeField != null)) {
                    if ((taxCurrencyCodeField.Equals(value) != true)) {
                        this.taxCurrencyCodeField = value;
                        this.OnPropertyChanged("TaxCurrencyCode");
                    }
                }
                else {
                    this.taxCurrencyCodeField = value;
                    this.OnPropertyChanged("TaxCurrencyCode");
                }
            }
        }
        
        public CustomerReferenceType CustomerReference {
            get {
                return this.customerReferenceField;
            }
            set {
                if ((this.customerReferenceField != null)) {
                    if ((customerReferenceField.Equals(value) != true)) {
                        this.customerReferenceField = value;
                        this.OnPropertyChanged("CustomerReference");
                    }
                }
                else {
                    this.customerReferenceField = value;
                    this.OnPropertyChanged("CustomerReference");
                }
            }
        }
        
        public AccountingCostCodeType AccountingCostCode {
            get {
                return this.accountingCostCodeField;
            }
            set {
                if ((this.accountingCostCodeField != null)) {
                    if ((accountingCostCodeField.Equals(value) != true)) {
                        this.accountingCostCodeField = value;
                        this.OnPropertyChanged("AccountingCostCode");
                    }
                }
                else {
                    this.accountingCostCodeField = value;
                    this.OnPropertyChanged("AccountingCostCode");
                }
            }
        }
        
        public AccountingCostType AccountingCost {
            get {
                return this.accountingCostField;
            }
            set {
                if ((this.accountingCostField != null)) {
                    if ((accountingCostField.Equals(value) != true)) {
                        this.accountingCostField = value;
                        this.OnPropertyChanged("AccountingCost");
                    }
                }
                else {
                    this.accountingCostField = value;
                    this.OnPropertyChanged("AccountingCost");
                }
            }
        }
        
        public LineCountNumericType LineCountNumeric {
            get {
                return this.lineCountNumericField;
            }
            set {
                if ((this.lineCountNumericField != null)) {
                    if ((lineCountNumericField.Equals(value) != true)) {
                        this.lineCountNumericField = value;
                        this.OnPropertyChanged("LineCountNumeric");
                    }
                }
                else {
                    this.lineCountNumericField = value;
                    this.OnPropertyChanged("LineCountNumeric");
                }
            }
        }
        
        public ObservableCollection<PeriodType> ValidityPeriod {
            get {
                return this.validityPeriodField;
            }
            set {
                if ((this.validityPeriodField != null)) {
                    if ((validityPeriodField.Equals(value) != true)) {
                        this.validityPeriodField = value;
                        this.OnPropertyChanged("ValidityPeriod");
                    }
                }
                else {
                    this.validityPeriodField = value;
                    this.OnPropertyChanged("ValidityPeriod");
                }
            }
        }
        
        public OrderReferenceType OrderReference {
            get {
                return this.orderReferenceField;
            }
            set {
                if ((this.orderReferenceField != null)) {
                    if ((orderReferenceField.Equals(value) != true)) {
                        this.orderReferenceField = value;
                        this.OnPropertyChanged("OrderReference");
                    }
                }
                else {
                    this.orderReferenceField = value;
                    this.OnPropertyChanged("OrderReference");
                }
            }
        }
        
        public DocumentReferenceType QuotationDocumentReference {
            get {
                return this.quotationDocumentReferenceField;
            }
            set {
                if ((this.quotationDocumentReferenceField != null)) {
                    if ((quotationDocumentReferenceField.Equals(value) != true)) {
                        this.quotationDocumentReferenceField = value;
                        this.OnPropertyChanged("QuotationDocumentReference");
                    }
                }
                else {
                    this.quotationDocumentReferenceField = value;
                    this.OnPropertyChanged("QuotationDocumentReference");
                }
            }
        }
        
        public DocumentReferenceType OriginatorDocumentReference {
            get {
                return this.originatorDocumentReferenceField;
            }
            set {
                if ((this.originatorDocumentReferenceField != null)) {
                    if ((originatorDocumentReferenceField.Equals(value) != true)) {
                        this.originatorDocumentReferenceField = value;
                        this.OnPropertyChanged("OriginatorDocumentReference");
                    }
                }
                else {
                    this.originatorDocumentReferenceField = value;
                    this.OnPropertyChanged("OriginatorDocumentReference");
                }
            }
        }
        
        public ObservableCollection<DocumentReferenceType> AdditionalDocumentReference {
            get {
                return this.additionalDocumentReferenceField;
            }
            set {
                if ((this.additionalDocumentReferenceField != null)) {
                    if ((additionalDocumentReferenceField.Equals(value) != true)) {
                        this.additionalDocumentReferenceField = value;
                        this.OnPropertyChanged("AdditionalDocumentReference");
                    }
                }
                else {
                    this.additionalDocumentReferenceField = value;
                    this.OnPropertyChanged("AdditionalDocumentReference");
                }
            }
        }
        
        public ObservableCollection<ContractType> Contract {
            get {
                return this.contractField;
            }
            set {
                if ((this.contractField != null)) {
                    if ((contractField.Equals(value) != true)) {
                        this.contractField = value;
                        this.OnPropertyChanged("Contract");
                    }
                }
                else {
                    this.contractField = value;
                    this.OnPropertyChanged("Contract");
                }
            }
        }
        
        public ObservableCollection<SignatureType> Signature {
            get {
                return this.signatureField;
            }
            set {
                if ((this.signatureField != null)) {
                    if ((signatureField.Equals(value) != true)) {
                        this.signatureField = value;
                        this.OnPropertyChanged("Signature");
                    }
                }
                else {
                    this.signatureField = value;
                    this.OnPropertyChanged("Signature");
                }
            }
        }
        
        public CustomerPartyType BuyerCustomerParty {
            get {
                return this.buyerCustomerPartyField;
            }
            set {
                if ((this.buyerCustomerPartyField != null)) {
                    if ((buyerCustomerPartyField.Equals(value) != true)) {
                        this.buyerCustomerPartyField = value;
                        this.OnPropertyChanged("BuyerCustomerParty");
                    }
                }
                else {
                    this.buyerCustomerPartyField = value;
                    this.OnPropertyChanged("BuyerCustomerParty");
                }
            }
        }
        
        public SupplierPartyType SellerSupplierParty {
            get {
                return this.sellerSupplierPartyField;
            }
            set {
                if ((this.sellerSupplierPartyField != null)) {
                    if ((sellerSupplierPartyField.Equals(value) != true)) {
                        this.sellerSupplierPartyField = value;
                        this.OnPropertyChanged("SellerSupplierParty");
                    }
                }
                else {
                    this.sellerSupplierPartyField = value;
                    this.OnPropertyChanged("SellerSupplierParty");
                }
            }
        }
        
        public CustomerPartyType OriginatorCustomerParty {
            get {
                return this.originatorCustomerPartyField;
            }
            set {
                if ((this.originatorCustomerPartyField != null)) {
                    if ((originatorCustomerPartyField.Equals(value) != true)) {
                        this.originatorCustomerPartyField = value;
                        this.OnPropertyChanged("OriginatorCustomerParty");
                    }
                }
                else {
                    this.originatorCustomerPartyField = value;
                    this.OnPropertyChanged("OriginatorCustomerParty");
                }
            }
        }
        
        public PartyType FreightForwarderParty {
            get {
                return this.freightForwarderPartyField;
            }
            set {
                if ((this.freightForwarderPartyField != null)) {
                    if ((freightForwarderPartyField.Equals(value) != true)) {
                        this.freightForwarderPartyField = value;
                        this.OnPropertyChanged("FreightForwarderParty");
                    }
                }
                else {
                    this.freightForwarderPartyField = value;
                    this.OnPropertyChanged("FreightForwarderParty");
                }
            }
        }
        
        public CustomerPartyType AccountingCustomerParty {
            get {
                return this.accountingCustomerPartyField;
            }
            set {
                if ((this.accountingCustomerPartyField != null)) {
                    if ((accountingCustomerPartyField.Equals(value) != true)) {
                        this.accountingCustomerPartyField = value;
                        this.OnPropertyChanged("AccountingCustomerParty");
                    }
                }
                else {
                    this.accountingCustomerPartyField = value;
                    this.OnPropertyChanged("AccountingCustomerParty");
                }
            }
        }
        
        public SupplierPartyType AccountingSupplierParty {
            get {
                return this.accountingSupplierPartyField;
            }
            set {
                if ((this.accountingSupplierPartyField != null)) {
                    if ((accountingSupplierPartyField.Equals(value) != true)) {
                        this.accountingSupplierPartyField = value;
                        this.OnPropertyChanged("AccountingSupplierParty");
                    }
                }
                else {
                    this.accountingSupplierPartyField = value;
                    this.OnPropertyChanged("AccountingSupplierParty");
                }
            }
        }
        
        public ObservableCollection<DeliveryType> Delivery {
            get {
                return this.deliveryField;
            }
            set {
                if ((this.deliveryField != null)) {
                    if ((deliveryField.Equals(value) != true)) {
                        this.deliveryField = value;
                        this.OnPropertyChanged("Delivery");
                    }
                }
                else {
                    this.deliveryField = value;
                    this.OnPropertyChanged("Delivery");
                }
            }
        }
        
        public DeliveryTermsType DeliveryTerms {
            get {
                return this.deliveryTermsField;
            }
            set {
                if ((this.deliveryTermsField != null)) {
                    if ((deliveryTermsField.Equals(value) != true)) {
                        this.deliveryTermsField = value;
                        this.OnPropertyChanged("DeliveryTerms");
                    }
                }
                else {
                    this.deliveryTermsField = value;
                    this.OnPropertyChanged("DeliveryTerms");
                }
            }
        }
        
        public ObservableCollection<PaymentMeansType> PaymentMeans {
            get {
                return this.paymentMeansField;
            }
            set {
                if ((this.paymentMeansField != null)) {
                    if ((paymentMeansField.Equals(value) != true)) {
                        this.paymentMeansField = value;
                        this.OnPropertyChanged("PaymentMeans");
                    }
                }
                else {
                    this.paymentMeansField = value;
                    this.OnPropertyChanged("PaymentMeans");
                }
            }
        }
        
        public ObservableCollection<PaymentTermsType> PaymentTerms {
            get {
                return this.paymentTermsField;
            }
            set {
                if ((this.paymentTermsField != null)) {
                    if ((paymentTermsField.Equals(value) != true)) {
                        this.paymentTermsField = value;
                        this.OnPropertyChanged("PaymentTerms");
                    }
                }
                else {
                    this.paymentTermsField = value;
                    this.OnPropertyChanged("PaymentTerms");
                }
            }
        }
        
        public TransactionConditionsType TransactionConditions {
            get {
                return this.transactionConditionsField;
            }
            set {
                if ((this.transactionConditionsField != null)) {
                    if ((transactionConditionsField.Equals(value) != true)) {
                        this.transactionConditionsField = value;
                        this.OnPropertyChanged("TransactionConditions");
                    }
                }
                else {
                    this.transactionConditionsField = value;
                    this.OnPropertyChanged("TransactionConditions");
                }
            }
        }
        
        public ObservableCollection<AllowanceChargeType> AllowanceCharge {
            get {
                return this.allowanceChargeField;
            }
            set {
                if ((this.allowanceChargeField != null)) {
                    if ((allowanceChargeField.Equals(value) != true)) {
                        this.allowanceChargeField = value;
                        this.OnPropertyChanged("AllowanceCharge");
                    }
                }
                else {
                    this.allowanceChargeField = value;
                    this.OnPropertyChanged("AllowanceCharge");
                }
            }
        }
        
        public ExchangeRateType TaxExchangeRate {
            get {
                return this.taxExchangeRateField;
            }
            set {
                if ((this.taxExchangeRateField != null)) {
                    if ((taxExchangeRateField.Equals(value) != true)) {
                        this.taxExchangeRateField = value;
                        this.OnPropertyChanged("TaxExchangeRate");
                    }
                }
                else {
                    this.taxExchangeRateField = value;
                    this.OnPropertyChanged("TaxExchangeRate");
                }
            }
        }
        
        public ExchangeRateType PricingExchangeRate {
            get {
                return this.pricingExchangeRateField;
            }
            set {
                if ((this.pricingExchangeRateField != null)) {
                    if ((pricingExchangeRateField.Equals(value) != true)) {
                        this.pricingExchangeRateField = value;
                        this.OnPropertyChanged("PricingExchangeRate");
                    }
                }
                else {
                    this.pricingExchangeRateField = value;
                    this.OnPropertyChanged("PricingExchangeRate");
                }
            }
        }
        
        public ExchangeRateType PaymentExchangeRate {
            get {
                return this.paymentExchangeRateField;
            }
            set {
                if ((this.paymentExchangeRateField != null)) {
                    if ((paymentExchangeRateField.Equals(value) != true)) {
                        this.paymentExchangeRateField = value;
                        this.OnPropertyChanged("PaymentExchangeRate");
                    }
                }
                else {
                    this.paymentExchangeRateField = value;
                    this.OnPropertyChanged("PaymentExchangeRate");
                }
            }
        }
        
        public CountryType DestinationCountry {
            get {
                return this.destinationCountryField;
            }
            set {
                if ((this.destinationCountryField != null)) {
                    if ((destinationCountryField.Equals(value) != true)) {
                        this.destinationCountryField = value;
                        this.OnPropertyChanged("DestinationCountry");
                    }
                }
                else {
                    this.destinationCountryField = value;
                    this.OnPropertyChanged("DestinationCountry");
                }
            }
        }
        
        public ObservableCollection<TaxTotalType> TaxTotal {
            get {
                return this.taxTotalField;
            }
            set {
                if ((this.taxTotalField != null)) {
                    if ((taxTotalField.Equals(value) != true)) {
                        this.taxTotalField = value;
                        this.OnPropertyChanged("TaxTotal");
                    }
                }
                else {
                    this.taxTotalField = value;
                    this.OnPropertyChanged("TaxTotal");
                }
            }
        }
        
        public MonetaryTotalType AnticipatedMonetaryTotal {
            get {
                return this.anticipatedMonetaryTotalField;
            }
            set {
                if ((this.anticipatedMonetaryTotalField != null)) {
                    if ((anticipatedMonetaryTotalField.Equals(value) != true)) {
                        this.anticipatedMonetaryTotalField = value;
                        this.OnPropertyChanged("AnticipatedMonetaryTotal");
                    }
                }
                else {
                    this.anticipatedMonetaryTotalField = value;
                    this.OnPropertyChanged("AnticipatedMonetaryTotal");
                }
            }
        }
        
        public ObservableCollection<OrderLineType> OrderLine {
            get {
                return this.orderLineField;
            }
            set {
                if ((this.orderLineField != null)) {
                    if ((orderLineField.Equals(value) != true)) {
                        this.orderLineField = value;
                        this.OnPropertyChanged("OrderLine");
                    }
                }
                else {
                    this.orderLineField = value;
                    this.OnPropertyChanged("OrderLine");
                }
            }
        }
        
        private static System.Xml.Serialization.XmlSerializer Serializer {
            get {
                if ((serializer == null)) {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(OrderChangeType));
                }
                return serializer;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        public virtual void OnPropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null)) {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current OrderChangeType object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize() {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try {
                memoryStream = new System.IO.MemoryStream();
                Serializer.Serialize(memoryStream, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally {
                if ((streamReader != null)) {
                    streamReader.Dispose();
                }
                if ((memoryStream != null)) {
                    memoryStream.Dispose();
                }
            }
        }
        
        /// <summary>
        /// Deserializes workflow markup into an OrderChangeType object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output OrderChangeType object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out OrderChangeType obj, out System.Exception exception) {
            exception = null;
            obj = default(OrderChangeType);
            try {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex) {
                exception = ex;
                return false;
            }
        }
        
        public static bool Deserialize(string xml, out OrderChangeType obj) {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }
        
        public static OrderChangeType Deserialize(string xml) {
            System.IO.StringReader stringReader = null;
            try {
                stringReader = new System.IO.StringReader(xml);
                return ((OrderChangeType)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally {
                if ((stringReader != null)) {
                    stringReader.Dispose();
                }
            }
        }
        
        /// <summary>
        /// Serializes current OrderChangeType object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, out System.Exception exception) {
            exception = null;
            try {
                SaveToFile(fileName);
                return true;
            }
            catch (System.Exception e) {
                exception = e;
                return false;
            }
        }
        
        public virtual void SaveToFile(string fileName) {
            System.IO.StreamWriter streamWriter = null;
            try {
                string xmlString = Serialize();
                System.IO.FileInfo xmlFile = new System.IO.FileInfo(fileName);
                streamWriter = xmlFile.CreateText();
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally {
                if ((streamWriter != null)) {
                    streamWriter.Dispose();
                }
            }
        }
        
        /// <summary>
        /// Deserializes xml markup from file into an OrderChangeType object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output OrderChangeType object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, out OrderChangeType obj, out System.Exception exception) {
            exception = null;
            obj = default(OrderChangeType);
            try {
                obj = LoadFromFile(fileName);
                return true;
            }
            catch (System.Exception ex) {
                exception = ex;
                return false;
            }
        }
        
        public static bool LoadFromFile(string fileName, out OrderChangeType obj) {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }
        
        public static OrderChangeType LoadFromFile(string fileName) {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally {
                if ((file != null)) {
                    file.Dispose();
                }
                if ((sr != null)) {
                    sr.Dispose();
                }
            }
        }
        #endregion
        
        #region Clone method
        /// <summary>
        /// Create a clone of this OrderChangeType object
        /// </summary>
        public virtual OrderChangeType Clone() {
            return ((OrderChangeType)(this.MemberwiseClone()));
        }
        #endregion
    }
}
